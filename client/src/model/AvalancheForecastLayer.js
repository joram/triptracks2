/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AvalancheForecastLayer model module.
 * @module model/AvalancheForecastLayer
 * @version 0.1.0
 */
class AvalancheForecastLayer {
    /**
     * Constructs a new <code>AvalancheForecastLayer</code>.
     * @alias module:model/AvalancheForecastLayer
     * @param date {String} 
     * @param alpineRating {String} 
     * @param treelineRating {String} 
     * @param belowTreelineRating {String} 
     */
    constructor(date, alpineRating, treelineRating, belowTreelineRating) { 
        
        AvalancheForecastLayer.initialize(this, date, alpineRating, treelineRating, belowTreelineRating);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, date, alpineRating, treelineRating, belowTreelineRating) { 
        obj['date'] = date;
        obj['alpine_rating'] = alpineRating;
        obj['treeline_rating'] = treelineRating;
        obj['below_treeline_rating'] = belowTreelineRating;
    }

    /**
     * Constructs a <code>AvalancheForecastLayer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AvalancheForecastLayer} obj Optional instance to populate.
     * @return {module:model/AvalancheForecastLayer} The populated <code>AvalancheForecastLayer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvalancheForecastLayer();

            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('alpine_rating')) {
                obj['alpine_rating'] = ApiClient.convertToType(data['alpine_rating'], 'String');
            }
            if (data.hasOwnProperty('treeline_rating')) {
                obj['treeline_rating'] = ApiClient.convertToType(data['treeline_rating'], 'String');
            }
            if (data.hasOwnProperty('below_treeline_rating')) {
                obj['below_treeline_rating'] = ApiClient.convertToType(data['below_treeline_rating'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AvalancheForecastLayer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AvalancheForecastLayer</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AvalancheForecastLayer.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }
        // ensure the json data is a string
        if (data['alpine_rating'] && !(typeof data['alpine_rating'] === 'string' || data['alpine_rating'] instanceof String)) {
            throw new Error("Expected the field `alpine_rating` to be a primitive type in the JSON string but got " + data['alpine_rating']);
        }
        // ensure the json data is a string
        if (data['treeline_rating'] && !(typeof data['treeline_rating'] === 'string' || data['treeline_rating'] instanceof String)) {
            throw new Error("Expected the field `treeline_rating` to be a primitive type in the JSON string but got " + data['treeline_rating']);
        }
        // ensure the json data is a string
        if (data['below_treeline_rating'] && !(typeof data['below_treeline_rating'] === 'string' || data['below_treeline_rating'] instanceof String)) {
            throw new Error("Expected the field `below_treeline_rating` to be a primitive type in the JSON string but got " + data['below_treeline_rating']);
        }

        return true;
    }


}

AvalancheForecastLayer.RequiredProperties = ["date", "alpine_rating", "treeline_rating", "below_treeline_rating"];

/**
 * @member {String} date
 */
AvalancheForecastLayer.prototype['date'] = undefined;

/**
 * @member {String} alpine_rating
 */
AvalancheForecastLayer.prototype['alpine_rating'] = undefined;

/**
 * @member {String} treeline_rating
 */
AvalancheForecastLayer.prototype['treeline_rating'] = undefined;

/**
 * @member {String} below_treeline_rating
 */
AvalancheForecastLayer.prototype['below_treeline_rating'] = undefined;






export default AvalancheForecastLayer;

