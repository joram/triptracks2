/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Avalanche from './Avalanche';
import Weather from './Weather';

/**
 * The Forecast model module.
 * @module model/Forecast
 * @version 0.1.0
 */
class Forecast {
    /**
     * Constructs a new <code>Forecast</code>.
     * @alias module:model/Forecast
     * @param avalanche {module:model/Avalanche} 
     * @param weather {module:model/Weather} 
     */
    constructor(avalanche, weather) { 
        
        Forecast.initialize(this, avalanche, weather);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, avalanche, weather) { 
        obj['avalanche'] = avalanche;
        obj['weather'] = weather;
    }

    /**
     * Constructs a <code>Forecast</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Forecast} obj Optional instance to populate.
     * @return {module:model/Forecast} The populated <code>Forecast</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Forecast();

            if (data.hasOwnProperty('avalanche')) {
                obj['avalanche'] = Avalanche.constructFromObject(data['avalanche']);
            }
            if (data.hasOwnProperty('weather')) {
                obj['weather'] = Weather.constructFromObject(data['weather']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Forecast</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Forecast</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Forecast.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `avalanche`
        if (data['avalanche']) { // data not null
          Avalanche.validateJSON(data['avalanche']);
        }
        // validate the optional field `weather`
        if (data['weather']) { // data not null
          Weather.validateJSON(data['weather']);
        }

        return true;
    }


}

Forecast.RequiredProperties = ["avalanche", "weather"];

/**
 * @member {module:model/Avalanche} avalanche
 */
Forecast.prototype['avalanche'] = undefined;

/**
 * @member {module:model/Weather} weather
 */
Forecast.prototype['weather'] = undefined;






export default Forecast;

